name: CD (Deploy to GitHub Pages)

on:
  # @see https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_run
  # @see https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-a-workflow-based-on-the-conclusion-of-another-workflow
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]

  workflow_dispatch:

permissions: {}

concurrency:
  group: deploy-to-pages
  cancel-in-progress: false

jobs:
  check:
    name: Deploy pre check
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.gen_output.outputs.result }}

    steps:
      - id: gen_output
        if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
        run: |
          echo "result=true" >> "$GITHUB_OUTPUT"

  build:
    name: Build
    needs:
      - check
    if: ${{ needs.check.outputs.result }}
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build
        run: |
          pnpm run build
          touch ./dist/.nojekyll
          cp ./404.html ./dist/404.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    name: Deploy
    needs:
      - check
      - build
    if: ${{ needs.check.outputs.result }}
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: Site
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  failure:
    name: "Failure"
    runs-on: ubuntu-latest
    needs:
      - check
    if: ${{ !needs.check.outputs.result }}

    steps:
      - run: echo 'CI failed. Deploy won't be executed'

